Give a scenario where the deadlock-avoidance mechanism described (previously in question 3.48) does not work. Hint: In the exchange problem, each process knows in advance which accounts it will need to get acces to. Consider a situation where a process must get access to some shared resources before it can know which additional shared resources it will require.

The hint suggests that any process that grabs access without knowing what other resources it'll need will not be well served by the deadlock avoidance mechanism. So anything that has a separate set of data structures to which our program was blind to should qualify. Databases might be the simplest idea. Another point is that the previous serialization only worked because it was dealing between symmetric resources (account A for the same thing in account B). As soon as we create asymmetry between resources, it becomes much more difficult to enforce order (impossible to enforce maybe?). 
